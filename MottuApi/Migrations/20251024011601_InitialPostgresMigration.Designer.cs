// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuApi.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MottuApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251024011601_InitialPostgresMigration")]
    partial class InitialPostgresMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("SEQ_MOTO");

            modelBuilder.HasSequence<int>("SEQ_MOVIMENTACAO");

            modelBuilder.HasSequence<int>("SEQ_PATIO");

            modelBuilder.HasSequence<int>("SEQ_USUARIO");

            modelBuilder.Entity("MottuApi.Models.Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"SEQ_MOTO\"')");

                    b.Property<DateTime?>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("PatioId")
                        .HasColumnType("integer");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("MottuApi.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"SEQ_MOVIMENTACAO\"')");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MotoId")
                        .HasColumnType("integer");

                    b.Property<int>("PatioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("PatioId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("MottuApi.Models.Patio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"SEQ_PATIO\"')");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Localizacao")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Patios");
                });

            modelBuilder.Entity("MottuApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"SEQ_USUARIO\"')");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MottuApi.Models.Moto", b =>
                {
                    b.HasOne("MottuApi.Models.Patio", "Patio")
                        .WithMany("Motos")
                        .HasForeignKey("PatioId");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuApi.Models.Movimentacao", b =>
                {
                    b.HasOne("MottuApi.Models.Moto", "Moto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottuApi.Models.Patio", "Patio")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuApi.Models.Moto", b =>
                {
                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("MottuApi.Models.Patio", b =>
                {
                    b.Navigation("Motos");

                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
